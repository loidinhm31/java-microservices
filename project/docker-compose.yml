version: '3'

services:
  postgres:
    container_name: postgres
    image: "postgres:15.0"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  mongo:
    image: "mongo:6.0"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: webservice
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodbpw
    volumes:
      - /data/db:/data/db

  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3.11-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped

  eureka-discovery-server:
    build:
      context: ./../eureka-discovery-server
      dockerfile: ./../eureka-discovery-server/Dockerfile
    restart: always
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: replicated
      replicas: 1

  api-gateway-server:
    build:
      context: ./../api-gateway
      dockerfile: ./../api-gateway/Dockerfile
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: replicated
      replicas: 1

  keycloak-authorization-server:
    build:
      context: ./../keycloak-authorization-server/embedded-keycloak-server
      dockerfile: ./../embedded-keycloak-server/Dockerfile
    restart: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: replicated
      replicas: 1

  administration-service:
    build:
      context: ./../administration-service
      dockerfile: ./../administration-service/Dockerfile
    restart: always
    ports:
      - "9091:9091"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: replicated
      replicas: 1

  handler-service:
    build:
      context: ./../handler-service
      dockerfile: ./../handler-service/Dockerfile
    restart: always
    ports:
      - "9093:9093"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: replicated
      replicas: 1

  notification-service:
    build:
      context: ./../notification-service
      dockerfile: ./../notification-service/Dockerfile
    restart: always
    ports:
      - "9095:9095"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    deploy:
      mode: replicated
      replicas: 1