server:
  servlet:
    context-path: /api
  port: 9093
  error:
    include-message: always

spring:
  application:
    name: handler-service
  profiles:
    active: local
    # Spring JDBC Properties
  datasource:
    url: jdbc:h2:mem:testdb
#    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=handler
#    username: postgres
#    password: postgrespw

  # Flyway config
  flyway:
    #    enabled: false
    schemas:
    outOfOrder: true
    baseline-version: 0
    baselineOnMigrate: true
    table: schema_history
  security:
    oauth2:
      resource-server:
        opaque:
          introspection-uri: http://localhost:8080/auth/realms/flo-dev/protocol/openid-connect/token/introspect
          introspection-client-id: FLO_API_SECRET
          introspection-client-secret: lmQ7Q9xiAGvtvRwc0pRckNZ2urLCbH6N

logging:
  level:
    org:
      springframework:
#        web: DEBUG
#      hibernate: INFO

# Swagger-ui custom path
  springdoc:
    swagger-ui:
      path: /swagger-ui.html

# Eureka Client
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8082/eureka}
  instance:
    preferIpAddress: true

# Resilience4j
resilience4j:
  circuitbreaker:
    instances:
      circuitBreakerApi:
        failure-rate-threshold: 50 # allow 50% of failed calls to the service in the closed state, after which it'll open the circuit and start rejecting requests
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count_based
  retry:
    instances:
      retryApi:
        max-attempts: 5
        wait-duration: 2s
        enable-exponential-backoff: true
    metrics:
      legacy:
        enabled: true
      enabled: true
  bulkhead:
    metrics:
      enabled: true
    instances:
      bulkheadApi:
        max-concurrent-calls: 0
        max-wait-duration: 1
  ratelimiter:
    metrics:
      enabled: true
    instances:
      rateLimiterApi:
        register-health-indicator: true
        limit-for-period: 5 # 5 req/min without waiting
        limit-refresh-period: 60s
        timeout-duration: 0s
        allow-health-indicator-to-fail: true
        subscribe-for-events: true
        event-consumer-buffer-size: 50